This document outlines the bespoke message protocol and format used by this program.

Each control message starts with a single character command code, followed by a newline, then a 64bit number showing the local time of the message, then another newline.

When a client wants to connect to a server and sit idle, the client sends a "register command", the contents are as follows:
R                   (command code)
[TIME]              (sender timestamp (16 char hex))
[USERNAME LENGTH]   (length of outgoing username (1 byte))
"USERNAME"          (username string)
EOT (ascii char 4)

When a client wants to send a message to another user, the client sends a "message command" to a server:
This is also used when a server wants to forward a message to another server or client:
M                   (command code)
[TIME]              (original sender timestamp (16 char hex))
"TARGET USERNAME"   (target username string)
"SENDER USERNAME"   (sender username string)
[MESSAGE LENGTH]    (length of outgoing message (2 char hex))
"MESSAGE CONTENTS"  (the message contents as a string)
EOT (ascii char 4)  (put an EOT here if no extra stuff)
[HOP 1 TIMESTAMP]   (time of 1st hop (16 char hex))
[HOP 2 TIMESTAMP]   (time of 2nd hop (16 char hex))
[HOP 3 TIMESTAMP]   (time of 3rd hop (16 char hex))
...
EOT (ascii char 4)  (end of transmission char)

Note that the latest timestamp is always sent first.

When a client or server wants to disconnect, they send a "disconnect command":
Q                   (command code)
[TIME]              (sender timestamp (16 char hex))
<REASON>            (reason for disconnect)
EOT (ascii char 4)
